using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Gun : MonoBehaviour {

	private Animator anim; //Animator
	private AudioSource _AudioSource; //Audio
	public float range = 1000.0f;    //Maximum range bullets travel
	public int bulletsPerMag = 30;  //Magazine capacity
	public int bulletsLeft = 120;   //Total bullets

	public int currentBullets;  //Bullets in the current magazine

	public Transform shootPoint;    //Point bullets are shot out of
	public GameObject hitParticles; //Bullet impact

	public ParticleSystem muzzleFlash; //Muzzle flash
	public AudioClip shootSound;    //Gun sound

	public float fireRate = 0.1f;   //Rate bullets shoot when holding down the fire button
	float fireTimer;    //Time counter for fire rate

	private bool isReloading; //Act of reloading

	// Use this for initialization
	void Start() {
		anim = GetComponent<Animator>();
		currentBullets = bulletsPerMag;
		_AudioSource = GetComponent<AudioSource>();
	}

	// Update is called once per frame
	void Update() {
		
		if (Input.GetButton("Fire1"))
		{
			if (currentBullets > 0)
				Fire(); //Fire gun when fire button is pressed or held
			else if(bulletsLeft > 0)
				DoReload();
		}

		if (Input.GetKeyDown(KeyCode.R))
		{
			if (currentBullets < bulletsPerMag && bulletsLeft > 0)
				DoReload();
		}

		if (fireTimer < fireRate)
			fireTimer += Time.deltaTime;    //Add to time counter
	}

	void FixedUpdate()
	{
		AnimatorStateInfo info = anim.GetCurrentAnimatorStateInfo(0);

		isReloading = info.IsName("Reload");
		//if (info.IsName("Fire")) anim.SetBool("Fire", false);
	}

	private void Fire()
	{
		if (fireTimer < fireRate || currentBullets <= 0 || isReloading) return;
		Debug.Log("Fire!");


		RaycastHit hit;

		if (Physics.Raycast(shootPoint.position, shootPoint.transform.forward, out hit, range))
		{
			Debug.Log(hit.transform.name + "found");

			GameObject hitParticleEffect = Instantiate(hitParticles, hit.point, Quaternion.FromToRotation(Vector3.up, hit.normal));

			Destroy(hitParticleEffect, 1f);
		}

		anim.CrossFadeInFixedTime("Fire", 0.1f);
		muzzleFlash.Play(); //Play muzzle flash
		PlayShootSound();   //Play gun fire sound

		currentBullets--;
		fireTimer = 0.0f;   //Reset fire timer
	}

	public void Reload()
	{
		if (bulletsLeft <= 0) return;

		int bulletsToLoad = bulletsPerMag - currentBullets;
		int bulletsToDeduct = (bulletsLeft >= bulletsToLoad) ? bulletsToLoad : bulletsLeft;	
		//A "smart if statement" (if and else in one statement)

		bulletsLeft -= bulletsToDeduct;
		currentBullets += bulletsToDeduct;
	}

	private void DoReload()
	{
		AnimatorStateInfo info = anim.GetCurrentAnimatorStateInfo(0);

		if (isReloading) return;

		anim.CrossFadeInFixedTime("Reload", 0.01f);
	}

	private void PlayShootSound()
	{
		_AudioSource.PlayOneShot(shootSound);
		//_AudioSource.clip = shootSound;
		//_AudioSource.Play();
	}
}
